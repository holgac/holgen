// This file is generated by holgen. Do not modify manually.

using System.Runtime.InteropServices;

namespace CSharpBindings;

public abstract class ICounterBumper
{
  public IntPtr HolgenPtr
  {
    get
    {
      if (!_holgenPtr.IsAllocated)
      {
        _holgenPtr = GCHandle.Alloc(this);
      }
      return (IntPtr)_holgenPtr;
    }
  }
  
  public abstract void SetName(string name);
  public static void SetNameCaller(IntPtr holgenObject, string name)
  {
    ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).SetName(name);
  }
  public abstract void Bump();
  public static void BumpCaller(IntPtr holgenObject)
  {
    ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).Bump();
  }
  public abstract void SetNameFromCounter(Counter ctr);
  public static void SetNameFromCounterCaller(IntPtr holgenObject, IntPtr ctr)
  {
    ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).SetNameFromCounter(new Counter(ctr));
  }
  public abstract void SetNameFromRevision(ModuleVersion version);
  public static void SetNameFromRevisionCaller(IntPtr holgenObject, ref ModuleVersion.Fields version)
  {
    ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).SetNameFromRevision(new ModuleVersion{Data = version});
  }
  public abstract ModuleVersion GetVersion();
  public static ModuleVersion.Fields GetVersionCaller(IntPtr holgenObject)
  {
    return ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).GetVersion().Data;
  }
  public abstract Counter GetCounter();
  public static IntPtr GetCounterCaller(IntPtr holgenObject)
  {
    return ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).GetCounter().HolgenPtr;
  }
  public abstract ICounterBumper Clone();
  public static IntPtr CloneCaller(IntPtr holgenObject)
  {
    return ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).Clone().HolgenPtr;
  }
  public abstract void CopyFrom(ICounterBumper other);
  public static void CopyFromCaller(IntPtr holgenObject, IntPtr other)
  {
    ((ICounterBumper)GCHandle.FromIntPtr(holgenObject).Target!).CopyFrom(((ICounterBumper)GCHandle.FromIntPtr(other).Target!));
  }
  
  public delegate void ICounterBumperSetNameDelegate(IntPtr holgenObject, string name);
  public delegate void ICounterBumperBumpDelegate(IntPtr holgenObject);
  public delegate void ICounterBumperSetNameFromCounterDelegate(IntPtr holgenObject, IntPtr ctr);
  public delegate void ICounterBumperSetNameFromRevisionDelegate(IntPtr holgenObject, ref ModuleVersion.Fields version);
  public delegate ModuleVersion.Fields ICounterBumperGetVersionDelegate(IntPtr holgenObject);
  public delegate IntPtr ICounterBumperGetCounterDelegate(IntPtr holgenObject);
  public delegate IntPtr ICounterBumperCloneDelegate(IntPtr holgenObject);
  public delegate void ICounterBumperCopyFromDelegate(IntPtr holgenObject, IntPtr other);
  
  private GCHandle _holgenPtr;
  
}
