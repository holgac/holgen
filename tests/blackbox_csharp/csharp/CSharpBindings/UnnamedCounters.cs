// This file is generated by holgen. Do not modify manually.

using System.Runtime.InteropServices;

namespace CSharpBindings;

public class UnnamedCounters
{
  public UnnamedCounters(IntPtr ptr)
  {
    HolgenPtr = ptr;
  }
  
  public Counter[] Counters
  {
    get => GetCounters();
  }
  public IntPtr HolgenPtr { get; }
  
  public static void HolgenInitialize(UnnamedCountersGetCountersDelegate unnamedCountersGetCountersDelegate)
  {
    _getCountersImpl = Marshal.GetFunctionPointerForDelegate(unnamedCountersGetCountersDelegate);
  }
  
  public delegate IntPtr UnnamedCountersGetCountersDelegate(IntPtr holgenObject, out ulong holgenReturnValueHolgenSize, out IntPtr holgenDeferredDeleter);
  public delegate void UnnamedCountersHolgenInitializeDelegate(UnnamedCountersGetCountersDelegate unnamedCountersGetCountersDelegate);
  
  private static IntPtr _getCountersImpl = IntPtr.Zero;
  
  private Counter[] GetCounters()
  {
    var holgenResult = Marshal.GetDelegateForFunctionPointer<UnnamedCountersGetCountersDelegate>(_getCountersImpl)(this.HolgenPtr, out var holgenReturnValueHolgenSize, out var holgenDeferredDeleter);
    var holgenReturnValueHolgenSizeInt = (int)holgenReturnValueHolgenSize;
    var holgenReturnValue = new Counter[holgenReturnValueHolgenSizeInt];
    Span<IntPtr> holgenResultSpan;
    unsafe
    {
      holgenResultSpan = new Span<IntPtr>(holgenResult.ToPointer(), holgenReturnValueHolgenSizeInt);
    }
    for (var i = 0; i < holgenReturnValueHolgenSizeInt; ++i)
    {
      holgenReturnValue[i] = new Counter(holgenResultSpan[i]);
    }
    DeferredDeleter.Perform(holgenDeferredDeleter);
    return holgenReturnValue;
  }
  
}
