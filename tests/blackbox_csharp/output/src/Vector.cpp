// This file is partially generated by holgen. Only modify the custom sections.
#include "../gen/Vector.h"
// HOLGEN_USER_DEFINED_BEGIN:Vector_CustomIncludes
#include <cmath>

// HOLGEN_USER_DEFINED_END:Vector_CustomIncludes

namespace holgen_blackbox_csharp {
float Vector::LengthSquared() const {
// HOLGEN_USER_DEFINED_BEGIN:Vector_LengthSquared_Const
  return mX * mX + mY * mY + mZ * mZ;
// HOLGEN_USER_DEFINED_END:Vector_LengthSquared_Const
}

void Vector::Normalize() {
// HOLGEN_USER_DEFINED_BEGIN:Vector_Normalize
  auto len = std::sqrt(LengthSquared());
  if (len > 0.0000001f) {
    auto invLen = 1 / len;
    mX *= invLen;
    mY *= invLen;
    mY *= invLen;
  }
// HOLGEN_USER_DEFINED_END:Vector_Normalize
}

Vector Vector::Normalized() {
// HOLGEN_USER_DEFINED_BEGIN:Vector_Normalized
  auto len = std::sqrt(LengthSquared());
  if (len > 0.0000001f) {
    auto invLen = 1 / len;
    return Vector(mX * invLen, mY * invLen, mZ * invLen);
  }
  return *this;
// HOLGEN_USER_DEFINED_END:Vector_Normalized
}

Vector::Vector(const float x, const float y, const float z)
// HOLGEN_USER_DEFINED_BEGIN:INITIALIZER_Vector_Construct
    :
    mX(x), mY(y), mZ(z)
// HOLGEN_USER_DEFINED_END:INITIALIZER_Vector_Construct
{
// HOLGEN_USER_DEFINED_BEGIN:Vector_Construct
// HOLGEN_USER_DEFINED_END:Vector_Construct
}

}
