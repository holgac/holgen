// This file is generated by holgen. Do not modify manually.
#pragma once

#include "../holgen.h"
#include <cstdint>
#include <string>
#include "EnumTest.h"
#include "ModuleVersion.h"

namespace holgen_blackbox_csharp {
  class Counter;
}
namespace holgen_blackbox_csharp {
// Defined in tests/blackbox_csharp/schemas/DotNetModule.hsc
struct DotNetModule {
public:
  void (*Initialize)() = nullptr;
  uint32_t (*BumpAndGetSingletonCounter)() = nullptr;
  void (*SetBumpAmount)(const uint32_t amount) = nullptr;
  ModuleVersion (*Constructor)() = nullptr;
  ModuleVersion (*MirroredStructManagedToNative)() = nullptr;
  ModuleVersion (*MirroredStructNativeToManagedToNative)() = nullptr;
  ModuleVersion (*MirroredStructMethodCall)() = nullptr;
  ModuleVersion (*MirroredStructInArguments)() = nullptr;
  void (*SetCounterName)(const char *name) = nullptr;
  uint32_t (*ProxyObjectNativeToManaged)() = nullptr;
  uint32_t (*ProxyObjectMethodArgInModule)(const Counter *counter) = nullptr;
  Counter *(*ProxyObjectReturnValue)(const Counter *counter1, const Counter *counter2) = nullptr;
  void (*ProxyObjectField)() = nullptr;
  uint32_t (*PrimitiveArrays)() = nullptr;
  void (*StringArraysNativeToManaged)(const char **args, size_t argsHolgenSize) = nullptr;
  void (*StringArraysManagedToNative)() = nullptr;
  uint32_t (*MirroredStructReturnVector)() = nullptr;
  uint32_t (*MirroredStructReturnArray)() = nullptr;
  int32_t (*PrimitiveReturnVector)() = nullptr;
  uint32_t (*PrimitiveReturnArray)() = nullptr;
  void (*TrackedCSharpObject)(const uint32_t addCount) = nullptr;
  EnumTest (*EnumArgumentAndReturnValue)(const EnumTest value) = nullptr;
  const char *(*EnumVectorArgumentAndReturnValue)() = nullptr;
  std::string mName;
  inline static const char *CLASS_NAME = "DotNetModule";
};
}
