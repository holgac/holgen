// This file is generated by holgen. Do not modify manually.
#pragma once

#include "../holgen.h"
#include <cstdint>
#include <string>
#include <rapidjson/fwd.h>

struct lua_State;
namespace ex4_schemas {
  class Converter;
}
namespace ex4_schemas {
class Weapon {
public:
  bool operator==(const Weapon &rhs) const;
  uint32_t GetId() const;
  const std::string &GetName() const;
  std::string &GetName();
  uint8_t GetDamageMin() const;
  uint8_t GetDamageMax() const;
  void SetId(uint32_t val);
  void SetName(const std::string &val);
  void SetDamageMin(uint8_t val);
  void SetDamageMax(uint8_t val);
  static Weapon *Get(uint32_t id);
  static Weapon *GetFromName(const std::string &key);
  bool ParseJson(const rapidjson::Value &json, const Converter &converter);
  void PushToLua(lua_State *luaState) const;
  void PushGlobalToLua(lua_State *luaState, const char *name) const;
  // This only works with negative indices
  static Weapon *ReadFromLua(lua_State *luaState, int32_t idx);
  static void CreateLuaMetatable(lua_State *luaState);
private:
  static int IndexMetaMethod(lua_State *luaState);
  static int NewIndexMetaMethod(lua_State *luaState);
  uint32_t mId = -1;
  std::string mName;
  uint8_t mDamageMin;
  uint8_t mDamageMax;
};
}
